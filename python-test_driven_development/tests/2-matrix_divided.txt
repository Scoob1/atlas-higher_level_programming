def matrix_divided(matrix, div):
'''
Testing a function that divides 2 elements of a matrix, and takes 2 arguments


>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
...     ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>>


Testing float point values 

>>> matrix = [
...     [1.0, 2.2],
...     [3.0, 4.1]
...     ]
>>> matrix_divided(matrix, 2.0)
[[0.5, 1.1], [1.5, 2.05]]
>>>


Testing if passing as string instead of int/float
>>> matrix = [
...     [1, 2, '3'],
...     [4, 5, 6]
...     ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>>

Testing Empty matrix
>>> matrix = []
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>>


Testing if dividing by 0
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
...     ]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
>>>


Testing if div value is an int/float
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
...     ]
>>> matrix_divided(matrix, 'school')
Traceback (most recent call last):
...
TypeError: div must be a number
>>>


Testing if each row is the same size
>>> matrix = [
...     [1, 2, 3],
...     [1, 2]
...     ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>>

Testing if matrix is = to None
>>> matrix = None
>>> matrix_divided(matrix, 5)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>>


'''
